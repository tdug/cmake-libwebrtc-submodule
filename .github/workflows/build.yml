name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            gclient_os_tag: linux
          - os: windows-latest
            gclient_os_tag: win
          - os: macos-latest
            gclient_os_tag: mac
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4

    - name: Install Depot Tools
      uses: newkdev/setup-depot-tools@v1.0.1

    - name: Create build directory
      run: mkdir -p build

    - name: Create .gclient file
      uses: elieahd/templater@v1
      with:
        template: .github/templates/.gclient
        file: build/.gclient
        variables: 'gclient_os_tag=${{matrix.gclient_os_tag}}'

    - name: Set Environment Variables [Windows]
      if: matrix.os == 'windows-latest'
      run: |
        echo "DEPOT_TOOLS_WIN_TOOLCHAIN=0" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "GYP_MSVS_VERSION=2022" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "GYP_GENERATORS=ninja,msvs-ninja" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "GYP_MSVS_OVERRIDE_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2022\Community" | Out-File -FilePath $env:GITHUB_ENV -Append

    # - name: Install Debian Dependencies
    #   if: runner.os == 'Linux'
    #   run: .github/scripts/install-debian-deps.sh

    # - name: Install macOS Dependencies
    #   if: runner.os == 'macOS'
    #   run: .github/scripts/install-macos-deps.sh

    - name: Install Windows Dependencies
      if: runner.os == 'Windows'
      run: .github\scripts\install-windows-deps.ps1

    # - name: Fetch libwebrtc [Unix]
    #   working-directory: build
    #   run: fetch --nohooks webrtc

    # - name: Fetch libwebrtc [Windows]
    #   if: matrix.os == 'windows-latest'
    #   env:
    #     DEPOT_TOOLS_WIN_TOOLCHAIN: 0
    #     GYP_MSVS_VERSION: 2022
    #     GYP_GENERATORS: ninja,msvs-ninja
    #     GYP_MSVS_OVERRIDE_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2022\Community
    #   working-directory: build
    #   run: fetch --nohooks webrtc

    - name: Cache libwebrtc
      uses: actions/cache@v4
      with:
        path: ${{github.workspace}}/build
        key: ${{runner.os}}-libwebrtc

    - name: gclient sync
      working-directory: build
      run: gclient sync --verbose

    # - name: Add libwebrtc to default group
    #   working-directory: build/src
    #   run: git apply ${{github.workspace}}/.github/patches/add-libwebrtc-to-default-group.patch

    - name: Generate Ninja Build Files [Windows]
      if: matrix.os == 'windows-latest'
      working-directory: build/src
      run: gn gen out/Default --args="target_os=\"win\" target_cpu=\"x64\" is_component_build=false is_clang=true is_debug=true rtc_use_h264=true ffmpeg_branding=\"Chrome\" rtc_include_tests=false rtc_build_examples=false libwebrtc_desktop_capture=true" --ide=vs2022

    - name: Generate Ninja Build Files [Linux]
      if: matrix.os == 'ubuntu-latest'
      working-directory: build/src
      run: gn gen out/Default --args="target_os=\"linux\" target_cpu=\"x64\" is_debug=true rtc_include_tests=false rtc_use_h264=true ffmpeg_branding=\"Chrome\" is_component_build=false use_rtti=true use_custom_libcxx=false rtc_enable_protobuf=false"

    # - name: Run Ninja Build
    #   working-directory: build/src
    #   run: ninja -C out/Default
