name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            gclient_os_tag: linux
          - os: windows-latest
            gclient_os_tag: win
          - os: macos-latest
            gclient_os_tag: mac
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4

    - name: Install Depot Tools
      uses: newkdev/setup-depot-tools@v1.0.1

    - name: Create build directory
      run: mkdir -p build

    - name: Create .gclient file
      uses: elieahd/templater@v1
      with:
        template: .github/templates/.gclient
        file: build/.gclient
        variables: 'gclient_os_tag=${{matrix.gclient_os_tag}}'

    - name: Fetch libwebrtc
      working-directory: build
      run: fetch webrtc

    - name: gclient sync [Unix]
      if: matrix.os != 'windows-latest'
      working-directory: build
      run: gclient sync --verbose

    - name: gclient sync [Windows]  
      if: matrix.os == 'windows-latest'
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
        GYP_MSVS_VERSION: 2022
        GYP_GENERATORS: ninja,msvs-ninja
        GYP_MSVS_OVERRIDE_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2022\Community
      working-directory: build
      run: gclient sync --verbose

    - run: ls build/src

    - name: Add libwebrtc to default group
      working-directory: build/src
      run: git apply .github/patches/add-libwebrtc-to-default-group.patch

    - name: Generate Ninja Build Files
      working-directory: build/src
      run: gn gen out/Default

    - name: Run Ninja Build
      working-directory: build/src
      run: ninja -C out/Default

    # - name: Install Debian Dependencies
    #   if: runner.os == 'Linux'
    #   run: .github/scripts/install-debian-deps.sh

    # - name: Install macOS Dependencies
    #   if: runner.os == 'macOS'
    #   run: .github/scripts/install-macos-deps.sh

    # - name: Install Windows Dependencies
    #   if: runner.os == 'Windows'
    #   run: .github\scripts\install-windows-deps.ps1

